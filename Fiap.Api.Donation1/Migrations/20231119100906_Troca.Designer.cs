// <auto-generated />
using System;
using Fiap.Api.Donation1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fiap.Api.Donation1.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231119100906_Troca")]
    partial class Troca
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Fiap.Api.Donation1.Models.ProdutoModel", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdutoId"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SugestaoTroca")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TipoProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("ProdutoId");

                    b.HasIndex("DataCadastro");

                    b.HasIndex("TipoProdutoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Produto");

                    b.HasData(
                        new
                        {
                            ProdutoId = 6,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7465),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7466),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 6",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 7,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7473),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7473),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 7",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 8,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7475),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7475),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 8",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 9,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7476),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7477),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 9",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 10,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7478),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7478),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 10",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 11,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7479),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7480),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 11",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 12,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7481),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7481),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 12",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 13,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7483),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7483),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 13",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 14,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7484),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7484),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 14",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 15,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7486),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7487),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 15",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 16,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7488),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7488),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 16",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 17,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7529),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7530),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 17",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 18,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7531),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7532),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 18",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 19,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7533),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7533),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 19",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 20,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7534),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7535),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 20",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 21,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7536),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7536),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 21",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 22,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7537),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7538),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 22",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 23,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7540),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7540),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 23",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 24,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7541),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7542),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 24",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 25,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7543),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7543),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 25",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 26,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7545),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7545),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 26",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 27,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7546),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7547),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 27",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 28,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7548),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7548),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 28",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 29,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7549),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7550),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 29",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 30,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7551),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7551),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 30",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        },
                        new
                        {
                            ProdutoId = 31,
                            DataCadastro = new DateTime(2023, 11, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7552),
                            DataExpiracao = new DateTime(2025, 5, 19, 7, 9, 5, 849, DateTimeKind.Local).AddTicks(7553),
                            Descricao = "Descrição",
                            Disponivel = true,
                            Nome = "Produto 31",
                            SugestaoTroca = "Sugestão de troca",
                            TipoProdutoId = 1,
                            UsuarioId = 1,
                            Valor = 1.0
                        });
                });

            modelBuilder.Entity("Fiap.Api.Donation1.Models.TipoProdutoModel", b =>
                {
                    b.Property<int>("TipoProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoProdutoId"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NomeTipoProduto")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.HasKey("TipoProdutoId");

                    b.ToTable("TipoProduto");

                    b.HasData(
                        new
                        {
                            TipoProdutoId = 1,
                            Descricao = "Descriçao para celular",
                            NomeTipoProduto = "Celular"
                        },
                        new
                        {
                            TipoProdutoId = 2,
                            Descricao = "Descriçao para Tvs",
                            NomeTipoProduto = "Tvs"
                        },
                        new
                        {
                            TipoProdutoId = 3,
                            Descricao = "Descriçao para ar-condicionado",
                            NomeTipoProduto = "Ar-condicionado"
                        });
                });

            modelBuilder.Entity("Fiap.Api.Donation1.Models.TrocaModel", b =>
                {
                    b.Property<Guid>("TrocaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProdutoId1")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId2")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("TrocaId");

                    b.HasIndex("ProdutoId1");

                    b.HasIndex("ProdutoId2");

                    b.ToTable("Troca");
                });

            modelBuilder.Entity("Fiap.Api.Donation1.Models.UsuarioModel", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Regra")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            EmailUsuario = "sa@fiap.com.br",
                            NomeUsuario = "Super Admin",
                            Regra = "admin",
                            Senha = "123456"
                        },
                        new
                        {
                            UsuarioId = 2,
                            EmailUsuario = "joao@fiap.com.br",
                            NomeUsuario = "Joao",
                            Regra = "admin",
                            Senha = "123456"
                        },
                        new
                        {
                            UsuarioId = 3,
                            EmailUsuario = "flavio@fiap.com.br",
                            NomeUsuario = "Flavio",
                            Regra = "admin",
                            Senha = "123456"
                        });
                });

            modelBuilder.Entity("Fiap.Api.Donation1.Models.ProdutoModel", b =>
                {
                    b.HasOne("Fiap.Api.Donation1.Models.TipoProdutoModel", "TipoProduto")
                        .WithMany()
                        .HasForeignKey("TipoProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fiap.Api.Donation1.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoProduto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Fiap.Api.Donation1.Models.TrocaModel", b =>
                {
                    b.HasOne("Fiap.Api.Donation1.Models.ProdutoModel", "ProdutoModel1")
                        .WithMany()
                        .HasForeignKey("ProdutoId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fiap.Api.Donation1.Models.ProdutoModel", "ProdutoModel2")
                        .WithMany()
                        .HasForeignKey("ProdutoId2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProdutoModel1");

                    b.Navigation("ProdutoModel2");
                });
#pragma warning restore 612, 618
        }
    }
}
